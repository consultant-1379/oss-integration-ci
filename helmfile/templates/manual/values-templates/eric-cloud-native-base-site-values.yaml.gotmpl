# Default values for eric-cloud-native-base.
# This is a YAML-formatted file.
global:
  security:
    tls:
      enabled: false
    sasl:
      enabled: true
  timezone: UTC

eric-sec-access-mgmt:
  ingress:
    hostname: {{ .Values | get "global.hosts.iam" }}
    tls:
      enabled: true
      existingSecret: 'iam-tls-secret'
  persistence:
    dbName: idam
    dbHost: eric-sec-access-mgmt-db-pg
  ldap:
    enabled: false
  tls:
    client:
      ldap:
        enabled: false
  service:
    tls:
      enabled: false

eric-sec-access-mgmt-db-pg:
  persistentVolumeClaim:
    size: 4Gi
    storageClassName: ""
  highAvailability:
    replicaCount: 3
  brAgent:
    backupDataModelConfig: false
  credentials:
    kubernetesSecretName: eric-sec-access-mgmt-creds
    keyForUserId: pguserid
    keyForUserPw: pgpasswd
    keyForSuperPw: pgpasswd
    keyForReplicaId: pguserid
    keyForReplicaPw: pgpasswd
    keyForMetricsPw: pgpasswd
  postgresDatabase: idam

eric-ctrl-bro:
  security:
    tls:
      broToAgent:
        enabled: false
      rest:
        enabled: false

eric-data-coordinator-zk:
  security:
    tls:
      agentToBro:
        enabled: false
  service:
    endpoints:
      datacoordinatorzk:
        tls:
          provider: "none"

eric-data-message-bus-kf:
  service:
    endpoints:
      messagebuskf:
        sasl:
          enforced: "optional"
  security:
    sasl:
      zookeeperclient:
        enabled: true
  persistence:
    persistentVolumeClaim:
      size: 2Gi
      storageClassName: ""
  configurationOverrides:
    "group.min.session.timeout.ms": 5000
    "group.max.session.timeout.ms": "7350000"
    "message.max.bytes": "17825792"
    "replica.fetch.max.bytes": "17825792"

eric-data-coordinator-zk:
  persistantVolumeClaim:
    storage: 2Gi
    storageClassName: ""
  persistence:
    persistentVolumeClaim:
      size: 2Gi
      storageClassName: ""
  resources:
    datacoordinatorzk:
      limits:
        memory: 2Gi

eric-log-shipper:
  additionalVolumes: |
    - name: docker-containers
      hostPath:
        path: /var/lib/docker/containers
    - name: kubernetes-containers
      hostPath:
        path: /var/log/pods
  additionalVolumeMounts: |
    - name: docker-containers
      mountPath: /var/lib/docker/containers
    - name: kubernetes-containers
      mountPath: /var/log/pods
  logshipper:
    cfgData: ""
    autodiscover:
      enabled: true
      logplane: eo
      namespace: ".RELEASE.NAMESPACE"
      exclusions:
        - field: "kubernetes.container.name"
          value: "logshipper"
        - field: "kubernetes.container.name"
          value: "logtransformer"
        - field: "kubernetes.container.name"
          value: "searchengine"
        - field: "kubernetes.container.name"
          value: "sysctl"
        - field: "kubernetes.container.name"
          value: "curator"
        - field: "kubernetes.container.name"
          value: "simple-ericsson-branding-server"
        - field: "kubernetes.container.name"
          value: "kibana"
        - field: "kubernetes.container.name"
          value: "metrics"
      templates:
        - condition.regexp:
            kubernetes.container.name: .+
          config:
            - type: docker
              combine_partial: true
              cri.parse_flags: true
              cri.force: true
              containers.ids:
                - "*"
              containers.path: "/var/log/pods/${data.kubernetes.namespace}_${data.kubernetes.pod.name}_${data.kubernetes.pod.uid}/"
    privileged: true
  rbac:
    createServiceAccount: true
