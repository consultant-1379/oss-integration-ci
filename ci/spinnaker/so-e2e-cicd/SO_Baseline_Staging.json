{
  "appConfig": {},
  "application": "so-e2e-cicd",
  "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten. Template name: idun_app_staging_baseline_helmfile.json in repo https://gerrit.ericsson.se/#/admin/projects/OSS/com.ericsson.oss.cicd/oss-common-cicd-automation-pipeline",
  "disabled": false,
  "id": "7f2f0a43-5089-45ad-96ad-8c6929c6266f",
  "index": 0,
  "keepWaitingPipelines": true,
  "lastModifiedBy": "enwkdmn",
  "limitConcurrent": false,
  "name": "SO_Baseline_Staging",
  "notifications": [],
  "parameterConfig":   [
        {
      "default": "",
      "description": "Name of the microservice chart within the integration chart",
      "hasOptions": false,
      "label": "",
      "name": "CHART_NAME",
      "options": [{"value": ""}],
      "pinned": true,
      "required": false
    },
        {
      "default": "",
      "description": "Version of the microservice chart within the integration chart",
      "hasOptions": false,
      "label": "",
      "name": "CHART_VERSION",
      "options": [{"value": ""}],
      "pinned": true,
      "required": false
    },
        {
      "default": "",
      "description": "Repo of the microservice chart within the integration chart",
      "hasOptions": false,
      "label": "",
      "name": "CHART_REPO",
      "options": [{"value": ""}],
      "pinned": true,
      "required": false
    },
        {
      "default": "so th ch eas dmm",
      "description": "Site values tags which has to be set to true during deployment",
      "hasOptions": false,
      "label": "",
      "name": "TAGS",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "",
      "description": "Gerrit REF Spec is used by Inca to pull down a code review to build a new OSS Common Base",
      "hasOptions": false,
      "label": "",
      "name": "GERRIT_REFSPEC",
      "options": [{"value": ""}],
      "pinned": true,
      "required": false
    },
        {
      "default": "master",
      "description": "Gerrit Branch is used by Inca to pull down a code review to build a new OSS Common Base",
      "hasOptions": false,
      "label": "",
      "name": "GERRIT_BRANCH",
      "options": [{"value": ""}],
      "pinned": true,
      "required": false
    },
        {
      "default": "true",
      "description": "",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_PRE_TESTING",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "eric-eoom-helmfile",
      "description": "Name of the integration chart which will be used for the Initial install",
      "hasOptions": false,
      "label": "",
      "name": "II_INT_CHART_NAME",
      "options": [{"value": ""}],
      "pinned": false,
      "required": false
    },
        {
      "default": "0.0.0",
      "description": "Version of the Integration Chart which will be used for the Initial Install",
      "hasOptions": false,
      "label": "",
      "name": "II_INT_CHART_VERSION",
      "options": [{"value": ""}],
      "pinned": false,
      "required": false
    },
        {
      "default": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm-local",
      "description": "Repo of the Integration Chart which will be used for the Initial Install",
      "hasOptions": false,
      "label": "",
      "name": "II_INT_CHART_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": false
    },
        {
      "default": "true",
      "description": "When set to true, it uses the site values generated from the Deployment manager prepare command for the deployment",
      "hasOptions": false,
      "label": "",
      "name": "USE_DM_PREPARE",
      "options":       [
        {"value": "false"},
        {"value": "true"}
      ],
      "pinned": false,
      "required": true
    },
        {
      "default": "false",
      "description": "When set to true, it will run openshift tests in precode stage",
      "hasOptions": false,
      "label": "",
      "name": "TEST_OPENSHIFT",
      "options":       [
        {"value": "false"},
        {"value": "true"}
      ],
      "pinned": false,
      "required": true
    },
        {
      "default": "site-values/eoom/ci/template/site-values-latest.yaml",
      "description": "The Path where all the necessary site values are located for the install/upgrade",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_FILE",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "site-values/so-staging/override-site-values-sostaging.yaml",
      "description": "Path within the Repo to the location of the site values override file. Content of this file will override the content for the site values set in the FULL_PATH_TO_SITE_VALUES_FILE paramater.",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "false",
      "description": "Set this parameter to true if you wish for the environment to be quarantined if the deployment flow false",
      "hasOptions": false,
      "label": "",
      "name": "QUARANTINE_ENV",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "oss-common-ci/ci-infrastructure/pooling/resources",
      "description": "This is the directory within the Repo specified within the Gather-Env-Details Jenkins job where to find the pooling environment details",
      "hasOptions": false,
      "label": "",
      "name": "ENV_DETAILS_DIR",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "so-staging",
      "description": "This is the label to search for that is attached to the environments in the Lockable Resource Plugin on Jenkins",
      "hasOptions": false,
      "label": "",
      "name": "ENV_LABEL",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "SO App Staging",
      "description": "Flow URL Tag is used when locking the environment to add a tag to describe what has locked the environment for easier tracking",
      "hasOptions": false,
      "label": "",
      "name": "FLOW_URL_TAG",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "120",
      "description": "This is the time to wait for an Environment to become available. After the time expires the job will fail out",
      "hasOptions": false,
      "label": "",
      "name": "WAIT_TIME",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "1800",
      "description": "Timeout for helmfile deploy",
      "hasOptions": false,
      "label": "",
      "name": "HELM_TIMEOUT",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "eric-eo-so",
      "description": "Application chart name",
      "hasOptions": false,
      "label": "",
      "name": "APP_CHART_NAME",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "https://gerrit.ericsson.se/a/OSS/com.ericsson.oss.orchestration/eso-baseline.git",
      "description": "Link to Application chart repository",
      "hasOptions": false,
      "label": "",
      "name": "APP_CHART_GIT_REPO_URL",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "https://arm.rnd.ki.sw.ericsson.se/artifactory/proj-so-gs-all-helm/",
      "description": "Drop Helm chart repository url. New application charts will be uploaded here",
      "hasOptions": false,
      "label": "",
      "name": "APP_CHART_HELM_DROP_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "https://arm.rnd.ki.sw.ericsson.se/artifactory/proj-so-gs-all-helm/",
      "description": "Released Helm chart repository url. New released application charts will be uploaded here",
      "hasOptions": false,
      "label": "",
      "name": "APP_CHART_HELM_RELEASED_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "https://arm.rnd.ki.sw.ericsson.se/artifactory/proj-so-gs-all-snapshot-helm/",
      "description": "Internal Helm chart repository url. New application chart snapshots required for testing will be uploaded here",
      "hasOptions": false,
      "label": "",
      "name": "APP_CHART_HELM_INTERNAL_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "https://gerrit.ericsson.se/a/OSS/com.ericsson.oss.eoom/eoom-helmfile.git",
      "description": "Link to Integration chart repository",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_GIT_REPO_URL",
      "options": [{"value": ""}],
      "pinned": true,
      "required": true
    },
        {
      "default": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm",
      "description": "Drop Helm chart repository url. New integration charts will be uploaded here",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_HELM_DROP_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-released-helm-perm",
      "description": "Released Helm chart repository url. New released integration charts will be uploaded here",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_HELM_RELEASED_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-ci-internal-helm",
      "description": "Internal Helm chart repository url. New integration chart snapshots required for testing will be uploaded here",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_HELM_INTERNAL_REPO",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    },
        {
      "default": "false",
      "description": "If set to true - new Application chart will not be released.  We can use that when ADP dependent chart version comes with \"-\" and we want to include in chart only \"+\" drops",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_CHART_RELEASE",
      "options":       [
        {"value": "true"},
        {"value": "false"}
      ],
      "pinned": true,
      "required": true
    },
        {
      "default": "true",
      "description": "",
      "hasOptions": true,
      "label": "",
      "name": "DEPLOY_ALL_CRDS",
      "options":       [
        {"value": "true"},
        {"value": "false"}
      ],
      "pinned": true,
      "required": true
    },
        {
      "default": "true",
      "description": "If \"false\" - then environment will be just cleaned and unreserved. No install will be performed after cleanup.",
      "hasOptions": false,
      "label": "",
      "name": "PERFORM_REDEPLOY",
      "options": [{"value": ""}],
      "pinned": false,
      "required": true
    }
  ],
  "schema": "1",
  "spelEvaluator": "v4",
  "stages":   [
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Quarantine-Environment",
      "master": "oss-fem8s11-eiffel052",
      "name": "Quarantine Namespace",
      "notifications": [      {
        "address": "PDLAPPSTAG@pdl.internal.ericsson.com",
        "level": "stage",
        "message": {"stage.failed": {"text": "Failed to quarantine Namespace"}},
        "type": "email",
        "when": ["stage.failed"]
      }],
      "parameters": {"ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}"},
      "refId": "34",
      "requisiteStageRefIds": ["66"],
      "sendNotifications": true,
      "stageEnabled":       {
        "expression": "${parameters['QUARANTINE_ENV'].contains('true')} and \"${#stage('Post Upgrade Testing')['status']}\" != \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
        {
      "name": "Flow Completed",
      "preconditions":       [
                {
          "context":           {
            "expression": "\"${#stage('Fetch Build Upload Release')['status']}\" == \"SUCCEEDED\"  or \"${#stage('Fetch Build Upload Release')['status']}\" == \"SKIPPED\"",
            "failureMessage": "Failed to release App Chart from microservice change"
          },
          "failPipeline": true,
          "type": "expression"
        },
                {
          "context":           {
            "expression": "\"${#stage('Post Upgrade Testing')['status']}\" == \"SUCCEEDED\"",
            "failureMessage": "Post Upgrade Testing failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
                {
          "context":           {
            "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\"",
            "failureMessage": "\"Upgrade using Helmfile\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
                {
          "context":           {
            "expression": "\"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"Install using Helmfile\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
                {
          "context":           {
            "expression": "\"${#stage('Pre Upgrade Testing')['status']}\" == \"SUCCEEDED\" or \"${#stage('Pre Upgrade Testing')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"Pre Upgrade Testing\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
                {
          "context":           {
            "expression": "\"${#stage('Helmfile Fetch Build Upload Snapshot')['status']}\" == \"SUCCEEDED\" or \"${#stage('Helmfile Fetch Build Upload Snapshot')['status']}\" == \"SKIPPED\"",
            "failureMessage": "Failed to build Helmfile snapshot"
          },
          "failPipeline": true,
          "type": "expression"
        },
                {
          "context":           {
            "expression": "\"${#stage('Pre Code Test')['status']}\" == \"SUCCEEDED\" or \"${#stage('Pre Code Test')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"Pre Code Test\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        }
      ],
      "refId": "35",
      "requisiteStageRefIds":       [
        "81",
        "92"
      ],
      "type": "checkPreconditions"
    },
        {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "Retrieve_Baseline_Version",
      "master": "oss-fem5s11-eiffel216",
      "name": "Get Latest EIAP Helmfile Version",
      "parameters":       {
        "KEY_TO_RETRIEVE_BASELINE_VERSION_OF": "II_BASELINE_INT_CHART_VERSION",
        "SPECIFIED_VERSION_FOR_PIPELINE": "${parameters['II_INT_CHART_VERSION']}",
        "VERSIONS_FILENAME": "versions"
      },
      "propertyFile": "artifact.properties",
      "refId": "51",
      "requisiteStageRefIds": [],
      "stageEnabled":       {
        "expression": "${trigger['parameters']['II_INT_CHART_NAME'].contains(\"eric-eiae-helmfile\")}",
        "type": "expression"
      },
      "type": "jenkins"
    },
        {
      "application": "so-e2e-cicd",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Post Upgrade Testing",
      "pipeline": "5443aed6-c8ae-4938-8d6e-eadc84c92a07",
      "pipelineParameters":       {
        "ADC_HOSTNAME": "${ADC_HOSTNAME}",
        "APPMGR_HOSTNAME": "${APPMGR_HOSTNAME}",
        "GAS_HOSTNAME": "${GAS_HOSTNAME}",
        "IAM_HOSTNAME": "${IAM_HOSTNAME}",
        "KUBE_CONFIG": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${OS_HOSTNAME}",
        "PF_HOSTNAME": "${PF_HOSTNAME}",
        "SO_HOSTNAME": "${SO_HOSTNAME}",
        "TA_HOSTNAME": "${TA_HOSTNAME}",
        "TH_HOSTNAME": "${TH_HOSTNAME}",
        "UDS_HOSTNAME": "${UDS_HOSTNAME}"
      },
      "refId": "66",
      "requisiteStageRefIds": ["90"],
      "stageEnabled":       {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Helmfile-Fetch-Build-Upload",
      "master": "oss-fem8s11-eiffel052",
      "name": "Helmfile Fetch Build Upload Snapshot",
      "parameters":       {
        "ALLOW_DOWNGRADE": "false",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "CHART_NAME": "${#stage(\"Fetch Build Upload APP Snapshot\")[\"context\"][\"INT_CHART_NAME\"]}",
        "CHART_REPO": "${#stage(\"Fetch Build Upload APP Snapshot\")[\"context\"][\"INT_CHART_REPO\"]}",
        "CHART_VERSION": "${#stage(\"Fetch Build Upload APP Snapshot\")[\"context\"][\"INT_CHART_VERSION\"]}",
        "GERRIT_REFSPEC": "",
        "GERRIT_USER_SECRET": "cloudman-user-creds",
        "GIT_REPO_URL": "${parameters['INT_CHART_GIT_REPO_URL']}",
        "HELM_DROP_REPO": "${parameters['INT_CHART_HELM_DROP_REPO']}",
        "HELM_INTERNAL_REPO": "${parameters['INT_CHART_HELM_INTERNAL_REPO']}",
        "HELM_RELEASED_REPO": "${parameters['INT_CHART_HELM_RELEASED_REPO']}",
        "HELM_REPO_CREDENTIALS_ID": "ossapps100_helm_repository_creds_file",
        "VCS_BRANCH": "23.05_track"
      },
      "propertyFile": "artifact.properties",
      "refId": "69",
      "requisiteStageRefIds":       [
        "78",
        "98"
      ],
      "type": "jenkins"
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-CI-Fetch-Build-Upload",
      "master": "oss-fem8s11-eiffel052",
      "name": "Pre Code Test",
      "notifications": [      {
        "address": "${trigger.parentExecution.stages.?[ name == 'SO_Application_Staging' ][0].context.notifications[0].address}",
        "cc": "PDLAPPSTAG@pdl.internal.ericsson.com",
        "level": "stage",
        "message": {"stage.failed": {"text": "Please check failed PreCode job: ${#stage('Pre Code Test').context.buildInfo.url}"}},
        "type": "email",
        "when": ["stage.failed"]
      }],
      "parameters":       {
        "APP_NAME": "${parameters['APP_CHART_NAME']}",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "CHART_NAME": "${parameters['CHART_NAME']}",
        "CHART_PATH": "charts/${parameters['APP_CHART_NAME']}",
        "CHART_REPO": "${parameters['CHART_REPO']}",
        "CHART_VERSION": "${parameters['CHART_VERSION']}",
        "CI_HELM": "true",
        "GERRIT_PREPARE_OR_PUBLISH": "prep",
        "GERRIT_REFSPEC": "${parameters['GERRIT_REFSPEC']}",
        "GERRIT_USER_SECRET": "cloudman-user-creds",
        "GIT_REPO_URL": "${parameters['APP_CHART_GIT_REPO_URL']}",
        "HELM_DROP_REPO": "${parameters['APP_CHART_HELM_DROP_REPO']}",
        "HELM_INTERNAL_REPO": "${parameters['APP_CHART_HELM_INTERNAL_REPO']}",
        "HELM_RELEASED_REPO": "${parameters['APP_CHART_HELM_RELEASED_REPO']}",
        "HELM_REPO_CREDENTIALS_ID": "ossapps100_helm_repository_creds_file",
        "TEST_OPENSHIFT": "${parameters['TEST_OPENSHIFT']}",
        "VCS_BRANCH": "${parameters['GERRIT_BRANCH']}",
        "WAIT_SUBMITTABLE_BEFORE_PUBLISH": "false"
      },
      "propertyFile": "",
      "refId": "77",
      "requisiteStageRefIds": [],
      "sendNotifications": true,
      "stageTimeoutMs": 2400000,
      "type": "jenkins"
    },
        {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "OSS-CI-Fetch-Build-Upload",
      "master": "oss-fem8s11-eiffel052",
      "name": "Fetch Build Upload APP Snapshot",
      "parameters":       {
        "ALLOW_DOWNGRADE": "false",
        "APP_NAME": "${parameters['APP_CHART_NAME']}",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "CHART_NAME": "${parameters['CHART_NAME']}",
        "CHART_PATH": "charts/${parameters['APP_CHART_NAME']}",
        "CHART_REPO": "${parameters['CHART_REPO']}",
        "CHART_VERSION": "${parameters['CHART_VERSION']}",
        "CI_HELM": "true",
        "GERRIT_REFSPEC": "${parameters['GERRIT_REFSPEC']}",
        "GERRIT_USER_SECRET": "cloudman-user-creds",
        "GIT_REPO_URL": "${parameters['APP_CHART_GIT_REPO_URL']}",
        "HELM_DROP_REPO": "${parameters['APP_CHART_HELM_DROP_REPO']}",
        "HELM_INTERNAL_REPO": "${parameters['APP_CHART_HELM_INTERNAL_REPO']}",
        "HELM_RELEASED_REPO": "${parameters['APP_CHART_HELM_RELEASED_REPO']}",
        "HELM_REPO_API_TOKEN": "ossapps100-arm-sero-api",
        "HELM_REPO_CREDENTIALS_ID": "ossapps100_helm_repository_creds_file",
        "VCS_BRANCH": "${parameters['GERRIT_BRANCH']}",
        "VERSION_STEP_STRATEGY_DEPENDENCY": "PATCH",
        "VERSION_STEP_STRATEGY_MANUAL": "PATCH",
        "WAIT_SUBMITTABLE_BEFORE_PUBLISH": "false"
      },
      "propertyFile": "artifact.properties",
      "refId": "78",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    },
        {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "SO-Reserve_Namespace",
      "master": "oss-fem8s11-eiffel052",
      "name": "Reserve Namespace",
      "parameters":       {
        "ENV_LABEL": "${parameters['ENV_LABEL']}",
        "FLOW_URL": "https://spinnaker.rnd.gic.ericsson.se/#/applications/${execution['application']}/executions/details/${execution.id}",
        "FLOW_URL_TAG": "${parameters['FLOW_URL_TAG']}",
        "WAIT_TIME": "${parameters['WAIT_TIME']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "80",
      "requisiteStageRefIds": ["78"],
      "stageTimeoutMs": 14400000,
      "type": "jenkins"
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Helm-Chart-Release",
      "master": "oss-fem8s11-eiffel052",
      "name": "Fetch Build Upload Release",
      "parameters":       {
        "ALLOW_DOWNGRADE": "false",
        "ALWAYS_RELEASE": "false",
        "APP_NAME": "${parameters['APP_CHART_NAME']}",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "AUTOMATIC_RELEASE": "false",
        "CHART_NAME": "${parameters['CHART_NAME']}",
        "CHART_PATH": "charts/${parameters['APP_CHART_NAME']}",
        "CHART_REPO": "${parameters['CHART_REPO']}",
        "CHART_VERSION": "${parameters['CHART_VERSION']}",
        "CI_HELM": "true",
        "GERRIT_PREPARE_OR_PUBLISH": "publish",
        "GERRIT_REFSPEC": "${parameters['GERRIT_REFSPEC']}",
        "GERRIT_USER_SECRET": "cloudman-user-creds",
        "GIT_REPO_URL": "${parameters['APP_CHART_GIT_REPO_URL']}",
        "HELM_DROP_REPO": "${parameters['APP_CHART_HELM_DROP_REPO']}",
        "HELM_INTERNAL_REPO": "${parameters['APP_CHART_HELM_INTERNAL_REPO']}",
        "HELM_RELEASED_REPO": "${parameters['APP_CHART_HELM_RELEASED_REPO']}",
        "HELM_REPO_API_TOKEN": "ossapps100-arm-sero-api",
        "HELM_REPO_CREDENTIALS_ID": "ossapps100_helm_repository_creds_file",
        "VCS_BRANCH": "${parameters['GERRIT_BRANCH']}",
        "VERSION_STEP_STRATEGY_DEPENDENCY": "PATCH",
        "VERSION_STEP_STRATEGY_MANUAL": "PATCH",
        "WAIT_SUBMITTABLE_BEFORE_PUBLISH": "false"
      },
      "propertyFile": "artifact.properties",
      "refId": "81",
      "requisiteStageRefIds":       [
        "66",
        "77"
      ],
      "stageEnabled":       {
        "expression": "false and \"${#stage('Post Upgrade Testing')['status']}\" == \"SUCCEEDED\" and \"${#stage('Pre Code Test')['status']}\" == \"SUCCEEDED\" and \"${parameters['SKIP_CHART_RELEASE']}\" == \"false\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": false,
      "failPipeline": false,
      "job": "OSS-Integration-Helmfile-Deploy",
      "master": "oss-fem8s11-eiffel052",
      "name": "Upgrade using Helmfile",
      "parameters":       {
        "ADC_HOSTNAME": "${ADC_HOSTNAME}",
        "APPMGR_HOSTNAME": "${APPMGR_HOSTNAME}",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "CH_HOSTNAME": "${CH_HOSTNAME}",
        "CRD_NAMESPACE": "eric-crd-ns",
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOYMENT_TYPE": "upgrade",
        "DEPLOY_ALL_CRDS": "${parameters['DEPLOY_ALL_CRDS']}",
        "EAS_HOSTNAME": "${EAS_HOSTNAME}",
        "ENV_CONFIG_FILE": "${trigger.parameters['ENV_DETAILS_DIR']}/${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}.conf",
        "FH_SNMP_ALARM_IP": "${FH_SNMP_ALARM_IP}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "FUNCTIONAL_USER_SECRET": "ossapps100-user-creds",
        "GAS_HOSTNAME": "${GAS_HOSTNAME}",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "IAM_HOSTNAME": "${IAM_HOSTNAME}",
        "INGRESS_IP": "${INGRESS_IP}",
        "INT_CHART_NAME": "${#stage(\"Helmfile Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_NAME\"]}",
        "INT_CHART_REPO": "${#stage(\"Helmfile Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_REPO\"]}",
        "INT_CHART_VERSION": "${#stage(\"Helmfile Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_VERSION\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${OS_HOSTNAME}",
        "PATH_TO_CERTIFICATES_FILES": "oss-common-ci/${PATH_TO_CERTIFICATES_FILES}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "PF_HOSTNAME": "${PF_HOSTNAME}",
        "SO_HOSTNAME": "${SO_HOSTNAME}",
        "TAGS": "${parameters['TAGS']}",
        "TA_HOSTNAME": "${TA_HOSTNAME}",
        "TH_HOSTNAME": "${TH_HOSTNAME}",
        "UDS_HOSTNAME": "${UDS_HOSTNAME}",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "90",
      "requisiteStageRefIds":       [
        "91",
        "69"
      ],
      "stageEnabled":       {
        "expression": "( '${#stage('Install using Helmfile')['status']}' == 'SUCCEEDED' or '${#stage('Install using Helmfile')['status']}' == 'SKIPPED' ) and ( '${#stage('Pre Upgrade Testing')['status']}' == 'SUCCEEDED' or '${#stage('Pre Upgrade Testing')['status']}' == 'SKIPPED' ) and '${#stage('Check Deployment Status')['status']}' == 'SUCCEEDED'",
        "type": "expression"
      },
      "type": "jenkins"
    },
        {
      "application": "so-e2e-cicd",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Pre Upgrade Testing",
      "pipeline": "5443aed6-c8ae-4938-8d6e-eadc84c92a07",
      "pipelineParameters":       {
        "ADC_HOSTNAME": "${ADC_HOSTNAME}",
        "APPMGR_HOSTNAME": "${APPMGR_HOSTNAME}",
        "GAS_HOSTNAME": "${GAS_HOSTNAME}",
        "IAM_HOSTNAME": "${IAM_HOSTNAME}",
        "KUBE_CONFIG": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${OS_HOSTNAME}",
        "PF_HOSTNAME": "${PF_HOSTNAME}",
        "SO_HOSTNAME": "${SO_HOSTNAME}",
        "TA_HOSTNAME": "${TA_HOSTNAME}",
        "TH_HOSTNAME": "${TH_HOSTNAME}",
        "UDS_HOSTNAME": "${UDS_HOSTNAME}"
      },
      "refId": "91",
      "requisiteStageRefIds": ["99"],
      "stageEnabled":       {
        "expression": "\"${parameters['SKIP_PRE_TESTING']}\" == \"false\" and (\"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SKIPPED\")",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
        {
      "application": "common-e2e-cicd",
      "failPipeline": true,
      "name": "Redeploy-Namespace",
      "pipeline": "22995332-48bb-47c1-92dc-3f9ebf65d7bf",
      "pipelineParameters":       {
        "ADC_HOSTNAME": "${ADC_HOSTNAME}",
        "APPMGR_HOSTNAME": "${APPMGR_HOSTNAME}",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "CH_HOSTNAME": "${CH_HOSTNAME}",
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOY_ALL_CRDS": "${parameters['DEPLOY_ALL_CRDS']}",
        "EAS_HOSTNAME": "${EAS_HOSTNAME}",
        "ELASTIC_INGRESS_HOST": "${ELASTIC_HOSTNAME}",
        "ENV_CONFIG_FILE": "${trigger.parameters['ENV_DETAILS_DIR']}/${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}.conf",
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}",
        "FH_SNMP_ALARM_IP": "${FH_SNMP_ALARM_IP}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "GAS_HOSTNAME": "${GAS_HOSTNAME}",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "IAM_HOSTNAME": "${IAM_HOSTNAME}",
        "INGRESS_IP": "${INGRESS_IP}",
        "INT_CHART_NAME": "${parameters['II_INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['II_INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${#stage(\"Set Latest Helmfile Version params\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "IS_ML_NAMESPACE": "false",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${OS_HOSTNAME}",
        "PATH_TO_CERTIFICATES_FILES": "oss-common-ci/${PATH_TO_CERTIFICATES_FILES}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "PERFORM_REDEPLOY": "${parameters['PERFORM_REDEPLOY']}",
        "PF_HOSTNAME": "${PF_HOSTNAME}",
        "PROMETHEUS_INGRESS_HOST": "${PROMETHEUS_HOSTNAME}",
        "SO_HOSTNAME": "${SO_HOSTNAME}",
        "TAGS": "${parameters['TAGS']}",
        "TA_HOSTNAME": "${TA_HOSTNAME}",
        "TH_HOSTNAME": "${TH_HOSTNAME}",
        "UDS_HOSTNAME": "${UDS_HOSTNAME}",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}"
      },
      "refId": "92",
      "requisiteStageRefIds":       [
        "66",
        "34"
      ],
      "sendNotifications": false,
      "stageEnabled":       {
        "expression": "\"${#stage('Quarantine Namespace')['status']}\" == \"SKIPPED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": false
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": true,
      "failPipeline": false,
      "name": "Define Hostnames",
      "refId": "93",
      "requisiteStageRefIds": ["96"],
      "stageEnabled":       {
        "expression": "'${#stage('Get Env Details')['status']}' == 'SUCCEEDED'",
        "type": "expression"
      },
      "type": "evaluateVariables",
      "variables":       [
                {
          "key": "PATH_TO_CERTIFICATES_FILES",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_PATH_TO_CERTIFICATES_FILES\"]}"
        },
                {
          "key": "INGRESS_IP",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_IP\"]}"
        },
                {
          "key": "IAM_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_IAM_HOSTNAME\"]}"
        },
                {
          "key": "GAS_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_GAS_HOSTNAME\"]}"
        },
                {
          "key": "ADC_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_ADC_HOSTNAME\"]}"
        },
                {
          "key": "APPMGR_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_APPMGR_HOSTNAME\"]}"
        },
                {
          "key": "SO_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_SO_HOSTNAME\"]}"
        },
                {
          "key": "UDS_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_UDS_HOSTNAME\"]}"
        },
                {
          "key": "PF_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_PF_HOSTNAME\"]}"
        },
                {
          "key": "OS_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_OS_HOSTNAME\"]}"
        },
                {
          "key": "TA_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_TA_HOSTNAME\"]}"
        },
                {
          "key": "TH_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_TH_HOSTNAME\"]}"
        },
                {
          "key": "EAS_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_EAS_HOSTNAME\"]}"
        },
                {
          "key": "CH_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"SM_CH_HOSTNAME\"]}"
        },
                {
          "key": "PATH_TO_HELMFILE",
          "value": "${(parameters['II_INT_CHART_NAME'] == 'eric-eiae-helmfile')? 'eric-eiae-helmfile/helmfile.yaml' : (parameters['II_INT_CHART_NAME'] == 'eric-eoom-helmfile')? 'eric-eoom-helmfile/helmfile.yaml' : 'eric-eo-helmfile/helmfile.yaml'}"
        },
                {
          "key": "PROMETHEUS_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"PROMETHEUS\"] ?: \"default\" }"
        },
                {
          "key": "ELASTIC_HOSTNAME",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"ELASTIC\"] ?: \"default\" }"
        },
                {
          "key": "FH_SNMP_ALARM_IP",
          "value": "${ #stage(\"Get Env Details\")[\"context\"][\"SNMP_IP\"] }"
        }
      ]
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Staging-Report-Register",
      "master": "oss-fem4s11-eiffel216",
      "name": "Report Center Registration",
      "parameters": {"EXEC_ID": "${execution.id}"},
      "refId": "Report_Center_Registration",
      "requisiteStageRefIds": [],
      "stageEnabled":       {
        "expression": "false",
        "type": "expression"
      },
      "type": "jenkins",
      "waitForCompletion": false
    },
        {
      "application": "eoapp",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Check-Helmfile-Deployment-Status",
      "master": "oss-fem8s11-eiffel052",
      "name": "Check Deployment Status",
      "parameters":       {
        "CHECK_FULL_VERSION": "false",
        "CHECK_TAGS": "so th ch eas dmm",
        "FUNCTIONAL_USER_SECRET": "cloudman-user-creds",
        "INT_CHART_NAME": "${parameters['II_INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['II_INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${#stage(\"Set Latest Helmfile Version params\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "PATH_TO_HELMFILE": "${PATH_TO_HELMFILE}",
        "TAGS": "${parameters['TAGS']}"
      },
      "pipeline": "bb20d8c5-8fb2-4576-8d57-063a3098f235",
      "pipelineParameters": {},
      "propertyFile": "artifact.properties",
      "refId": "94",
      "requisiteStageRefIds": ["100"],
      "stageEnabled":       {
        "expression": "\"${#stage('Define Hostnames')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins",
      "waitForCompletion": true
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Gather-Env-Details",
      "master": "oss-fem8s11-eiffel052",
      "name": "Get Env Details",
      "parameters":       {
        "ENV_DETAILS_DIR": "${parameters['ENV_DETAILS_DIR']}",
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}"
      },
      "propertyFile": "artifact.properties",
      "refId": "96",
      "requisiteStageRefIds": ["80"],
      "type": "jenkins"
    },
        {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "OSS-Integration-Get-Latest-ChartOrHelmfile",
      "master": "oss-fem8s11-eiffel052",
      "name": "Get Latest Helmfile Version",
      "parameters":       {
        "FUNCTIONAL_USER_SECRET": "cloudman-user-creds",
        "INT_CHART_NAME": "${parameters['II_INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['II_INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${parameters['II_INT_CHART_VERSION']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "97",
      "requisiteStageRefIds": [],
      "stageEnabled":       {
        "expression": "${trigger['parameters']['II_INT_CHART_NAME'].contains(\"eric-eoom-helmfile\")} or ${trigger['parameters']['II_INT_CHART_NAME'].contains(\"eric-eo-helmfile\")}",
        "type": "expression"
      },
      "type": "jenkins"
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failOnFailedExpressions": true,
      "failPipeline": true,
      "name": "Set Latest Helmfile Version params",
      "refId": "98",
      "requisiteStageRefIds":       [
        "51",
        "97"
      ],
      "type": "evaluateVariables",
      "variables": [      {
        "key": "II_BASELINE_INT_CHART_VERSION",
        "value": "${(parameters['II_INT_CHART_NAME'] == 'eric-eiae-helmfile')? #stage(\"Get Latest EIAP Helmfile Version\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"] : #stage(\"Get Latest Helmfile Version\")[\"context\"][\"INT_CHART_VERSION\"]}"
      }]
    },
        {
      "application": "common-e2e-cicd",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Install using Helmfile",
      "pipeline": "22995332-48bb-47c1-92dc-3f9ebf65d7bf",
      "pipelineParameters":       {
        "ADC_HOSTNAME": "${ADC_HOSTNAME}",
        "APPMGR_HOSTNAME": "${APPMGR_HOSTNAME}",
        "ARMDOCKER_USER_SECRET": "cloudman-docker-auth-config",
        "CH_HOSTNAME": "${CH_HOSTNAME}",
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOY_ALL_CRDS": "${parameters['DEPLOY_ALL_CRDS']}",
        "EAS_HOSTNAME": "${EAS_HOSTNAME}",
        "ELASTIC_INGRESS_HOST": "${ELASTIC_HOSTNAME}",
        "ENV_CONFIG_FILE": "${trigger.parameters['ENV_DETAILS_DIR']}/${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}.conf",
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}",
        "FH_SNMP_ALARM_IP": "${FH_SNMP_ALARM_IP}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "GAS_HOSTNAME": "${GAS_HOSTNAME}",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "IAM_HOSTNAME": "${IAM_HOSTNAME}",
        "INGRESS_IP": "${INGRESS_IP}",
        "INT_CHART_NAME": "${parameters['II_INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['II_INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${#stage(\"Set Latest Helmfile Version params\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "IS_ML_NAMESPACE": "false",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${OS_HOSTNAME}",
        "PATH_TO_CERTIFICATES_FILES": "oss-common-ci/${PATH_TO_CERTIFICATES_FILES}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "PERFORM_REDEPLOY": "true",
        "PF_HOSTNAME": "${PF_HOSTNAME}",
        "PROMETHEUS_INGRESS_HOST": "${PROMETHEUS_HOSTNAME}",
        "SO_HOSTNAME": "${SO_HOSTNAME}",
        "TAGS": "${parameters['TAGS']}",
        "TA_HOSTNAME": "${TA_HOSTNAME}",
        "TH_HOSTNAME": "${TH_HOSTNAME}",
        "UDS_HOSTNAME": "${UDS_HOSTNAME}",
        "UNRESERVE_ENVIRONMENT": "false",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}"
      },
      "refId": "99",
      "requisiteStageRefIds": ["94"],
      "sendNotifications": false,
      "stageEnabled":       {
        "expression": "${#stage(\"Check Deployment Status\")[\"context\"][\"SKIP_DELETION\"].contains(\"false\")} && \"${#stage('Check Deployment Status')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
        {
      "failOnFailedExpressions": true,
      "name": "Set DDP Details",
      "refId": "100",
      "requisiteStageRefIds": ["93"],
      "type": "evaluateVariables",
      "variables": [      {
        "key": "DDP_AUTO_UPLOAD",
        "value": "${#stage(\"Get Env Details\")[\"context\"][\"DDP_ID\"]!=null and #stage(\"Get Env Details\")[\"context\"][\"DDP_ACCOUNT\"]!=null  and #stage(\"Get Env Details\")[\"context\"][\"DDP_PASSWORD\"]!=null ? \"true\": \"false\" }"
      }]
    },
        {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "method": "POST",
      "name": "Create Pipeline Execution Dashboard Entry",
      "payload":       {
        "applicationName": "${execution.trigger.parameters.APP_CHART_NAME}",
        "executionId": "${execution.id}",
        "links": [        {
          "href": "https://spinnaker.rnd.gic.ericsson.se/#/applications/${execution.application}/executions/${execution.id}",
          "rel": "Spinnaker Execution"
        }],
        "microserviceName": "${execution.trigger.parameters.CHART_NAME}",
        "microserviceVersion": "${execution.trigger.parameters.CHART_VERSION}",
        "productName": "-",
        "productVersion": "-",
        "spinnakerApplication": "${execution.application}",
        "spinnakerPipelineName": "${execution.name}",
        "stagingArea": "APPLICATION",
        "status": "${execution.status}",
        "testwareVersion": "-"
      },
      "refId": "Create Pipeline Execution Dashboard Entry",
      "requisiteStageRefIds": [],
      "stageEnabled":       {
        "expression": "false",
        "type": "expression"
      },
      "statusUrlResolution": "getMethod",
      "type": "webhook",
      "url": "https://ped.ews.gic.ericsson.se/api/v1/pipeline-executions"
    }
  ],
  "triggers": [],
  "updateTs": "1689173509847"
}