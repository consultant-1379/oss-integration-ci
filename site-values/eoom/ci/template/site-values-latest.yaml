global:
  hosts:
    iam: 'IAM_HOST_REPLACE'
    gas: 'GAS_HOST_REPLACE'
    uds: 'UDS_HOST_REPLACE'
    so: 'SO_HOST_REPLACE'
    th: 'TH_HOST_REPLACE'
    adc: 'ADC_HOST_REPLACE'
    gr: 'GR_HOST_REPLACE'
    aviz: 'AVIZ_HOST_REPLACE'
  ingressClass: eoom_iccr
  registry:
    url: 'DOCKER_REGISTRY_REPLACE'
    username: 'USERNAME_REPLACE'
    password: 'PASSWORD_REPLACE'
  serviceMesh:
    enabled: false
  meshConfig:
    enableTracing: false
    defaultConfig:
      tracing:
        sampling: 10
  proxy:
    tracer: zipkin
  tracer:
    zipkin:
      address: ''
  support:
    ipv6:
      enabled: IPV6_ENABLE_REPLACE
  timezone: UTC
  createClusterRoles: true
  log:
    streamingMethod: indirect
tags:
  so: false
  uds: false
  dmm: false
  th: false
  eas: false
  ch: false
  eca: false
  adc: false
  aindxr: false
  aviz: false
  aaug: false
  pmh: false
eric-cloud-native-base:
  eric-data-search-engine-curator:
    cronjob:
      curator:
        schedule: "0 */2 * * *"
    actions: ''
  eric-sec-access-mgmt:
    replicaCount: 2
  eric-ctrl-bro:
    persistence:
      persistentVolumeClaim:
        size: '20Gi'
    sftp:
      username: 'dummy'
      password: 'dummy'
  eric-tm-ingress-controller-cr:
    enabled: true
    service:
      loadBalancerIP: 'INGRESS_IP_REPLACE'
      annotations:
        cloudProviderLB: { }
      externalTrafficPolicy: 'Local'
  eric-log-transformer:
    egress:
      syslog:
        enabled: false
        remoteHosts: []
  eric-data-search-engine:
    service:
      network:
        protocol:
          IPv6: IPV6_ENABLE_REPLACE
    persistence:
      data:
        persistentVolumeClaim:
          size: "10Gi"
  eric-data-object-storage-mn:
    objects_lifecycle_cfg: ""
    brAgent:
      properties:
        backup_data_path: "bucket1/data1.txt"
    persistentVolumeClaim:
      size: 10Gi
  eric-fh-snmp-alarm-provider:
    sendAlarm: false
geo-redundancy:
  enabled: false
eric-oss-common-base: 
  sessionTokens:
    maxSessionDurationSecs: 36000
    maxIdleTimeSecs: 1800
  service-mesh-ingress-gateway:
    service:
      loadBalancerIP: 'INGRESS_IP_REPLACE'
      annotations:
        cloudProviderLB: {}
    externalTrafficPolicy: Cluster
  system-user:
    credentials:
      username: 'system-user'
      password: 'Ericsson123!'
  gas:
    defaultUser:
      username: 'gas-user'
      password: 'Ericsson123!'
  eric-eo-usermgmt:
    replicaCount: 2
  eric-eo-usermgmt-ui:
    replicaCount: 2
  eric-gr-bur-orchestrator:
    credentials:
      username: ""
      password: ""
    gr:
      bro:
        autoDelete:
          backupsLimit: 10
      sftp:
        url: ""
        username: ""
        password: ""
      cluster:
        role: ""
        # note that the secondary_hostnames variable should only be defined if the role is set to "PRIMARY".
        # secondary_hostnames should be commented out if role is set to "SECONDARY".
        secondary_hostnames:
          - ""
      registry:
        secondarySiteContainerRegistryHostname: ""
eric-topology-handling:
  eric-oss-common-topology-svc:
    eric-oss-cmn-topology-svc-core:
      defaultUser:
        username: "cts-user"
        password: "Ericsson123!"
      useGasHost:
        enabled: true

eric-oss-uds:
  defaultUser:
    username: 'uds-user'
    password: 'Ericsson123!'
eric-oss-ericsson-adaptation:
  eric-oss-ran-topology-adapter:
    rtaUser:
      username: 'rta-user'
      password: 'Ericsson123!'
eric-oss-config-handling:
  cps-user:
    credentials:
      username: 'cps-user'
      password: 'Ericsson123!'
  dmi-user:
    credentials:
      username: 'dmi-user'
      password: 'Ericsson123!'
eric-eo-so:
  defaultUser:
    username: 'so-user'
    password: 'Ericsson123!'
eric-oss-adc:
  ingress:
    tls:
      secretName: ves-tls-secret
